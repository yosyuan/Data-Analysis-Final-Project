# -*- coding: utf-8 -*-
"""09_Marriage Rate Temple Density_Bubble_chart

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c_2oNP2mVD6NIHZxMjDLZQ7rl0qKPdT_
"""

# Import necessary libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_excel('data.xlsx')

# Define region mapping
region_map = {
    'New Taipei': 'North', 'Taipei': 'North', 'Keelung': 'North',
    'Taoyuan': 'North', 'Hsinchu Ct': 'North', 'Hsinchu Co': 'North', 'Yilan': 'North',
    'Taichung': 'Central', 'Miaoli': 'Central', 'Changhua': 'Central',
    'Nantou': 'Central', 'Yunlin': 'Central',
    'Tainan': 'South', 'Kaohsiung': 'South', 'Chiayi Ct': 'South',
    'Chiayi Co': 'South', 'Pingtung': 'South',
    'Hualien': 'Other', 'Taitung': 'Other',
    'Penghu': 'Other', 'Kinmen': 'Other', 'Matsu': 'Other'
}
df["Region"] = df["City"].map(region_map)

# Calculate Pearson correlation between temple and vegetarian restaurant densities
r, p = pearsonr(df['Marriage Rate'], df['Temple Density (km^2)'])


# Create bubble chart
plt.figure(figsize=(12, 8))
bubble = sns.scatterplot(
    data=df,
    x='Marriage Rate',
    y='Temple Density (km^2)',
    size='Vegetarian Restaurant Density (km^2)',
    sizes=(100, 1000),
    hue='Region',
    palette='Set2',
    alpha=0.7,
    edgecolor='gray'
)

# Add city labels to bubbles
for i in range(df.shape[0]):
    plt.text(
        df['Marriage Rate'][i],
        df['Temple Density (km^2)'][i],
        df['City'][i],
        fontsize=8,
        ha='center',
        va='center'
    )

# Display r and p values on the plot
plt.text(
    0.02, 0.5, f"r = {r:.2f}\np = {p:.3f}",
    transform=plt.gca().transAxes,
    fontsize=12,
    bbox=dict(facecolor='white', edgecolor='gray', boxstyle='round,pad=0.5')
)

# Set plot title and axis labels
plt.title('Marriage Rate vs. Temple Density (km^2)\n(Bubble Size = Vegetarian Restaurant Density)')
plt.xlabel('Marriage Rate')
plt.ylabel('Temple Density (km^2)')
plt.legend(title='Region', loc='upper left')
plt.tight_layout()
plt.show()